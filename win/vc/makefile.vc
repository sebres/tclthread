# RCS: @(#) $Id: makefile.vc,v 1.1 2000/04/10 20:48:36 welch Exp $

!include "config.vc"

!if "$(NODEBUG)" == "0"
TMPDIRNAME = Debug
DBGX = d
!else
TMPDIRNAME = Release
DBGX =
!endif

SOURCEROOT = ..
GENERICDIR = $(SOURCEROOT)\generic
WINDIR     = $(SOURCEROOT)\win
TMPDIR     = $(WINDIR)\$(TMPDIRNAME)
OUTDIR     = $(WINDIR)\$(TMPDIRNAME)

THREADLIB  = $(OUTDIR)\thread$(DBGX).dll

THREADOBJS  = \
  $(TMPDIR)\threadCmd.obj \
  $(TMPDIR)\resource.obj


######################################################################
# Compile flags
######################################################################

!if "$(NODEBUG)" == "0"
cdebug = -Z7 -Od -WX
!else
cdebug = -O2 -Gs -GD
!endif

# I have better luck mixing debug/release builds with Tcl this way...
cvarsmt = -MT$(DBGX)

cflags = -c -W3 -nologo -YX $(cdebug) $(cvarsmt) $(include32) \
         -Fp$(TMPDIR)\ -Fo$(TMPDIR)\ -I"$(TCLROOT)\generic"

######################################################################
# Link flags
######################################################################

!if "$(NODEBUG)" == "0"
ldebug = -opt:noref -debug -debugtype:cv
!else
ldebug = -opt:ref -release
!endif

# declarations common to all linker options
lcommon = -nologo -incremental:no -machine:$(MACHINE) $(ldebug)

conlflags = $(lcommon) -subsystem:console
guilflags = $(lcommon) -subsystem:windows
dlllflags = $(lcommon) -subsystem:windows -dll
reslflags = -noentry -dll


######################################################################
# Project specific targets
######################################################################

all : $(THREADLIB)

$(THREADLIB) : $(TMPDIR)\nul $(OUTDIR)\nul $(THREADOBJS)
  @echo Linking...
  @$(link32) $(dlllflags) /nodefaultlib:msvcrt -out:$@ $(TCLSTUBSLIB) @<<
$(THREADOBJS)
<<nokeep

# Create the output and temp directories, if not already there.
# Won't error with a forced rebuild_all (ie. nmake -a ...).
#
$(TMPDIR)\nul :
    @if not exist $(TMPDIR)\nul md $(TMPDIR) &\
      echo Created directory '$(TMPDIR)'

!if "$(TMPDIR)" != "$(OUTDIR)"
$(OUTDIR)\nul :
    @if not exist $(OUTDIR)\nul md $(OUTDIR) &\
      echo Created directory '$(OUTDIR)'
!endif

######################################################################
# Inference rules
######################################################################

# use batch-mode when nmake supports it.
#
!if $(_NMAKE_VER) < 162
{$(GENERICDIR)}.c{$(TMPDIR)}.obj :
  @echo Compiling...
  @$(cc32) $(cflags) -DUSE_TCL_STUBS -DTCL_THREADS=1 $<
!else
{$(GENERICDIR)}.c{$(TMPDIR)}.obj ::
  @echo Compiling...
  @$(cc32) $(cflags) -DUSE_TCL_STUBS -DTCL_THREADS=1 @<<
$<
<<nokeep
!endif


######################################################################
# Special case targets
######################################################################

$(TMPDIR)\thread.res : $(WINDIR)\thread.rc
  @echo Compiling resources...
  @$(rc32) -fo"$@" -i "$(GENERICDIR)" -r -DNODEBUG=$(NODEBUG) $(WINDIR)\thread.rc

$(TMPDIR)\resource.obj : $(TMPDIR)\thread.res
  @$(cvtres32) -nologo -machine:$(MACHINE) -out:$@ $(TMPDIR)\thread.res


######################################################################
# Dedependency rules
######################################################################

$(WINDIR)\thread.rc : $(GENERICDIR)\thread.h

$(GENERICDIR)\threadCmd.c : $(GENERICDIR)\thread.h


######################################################################
# Cleanup
######################################################################

clean:
  @if exist $(OUTDIR)\nul rmdir /s /q $(OUTDIR)
  @if exist $(TMPDIR)\nul rmdir /s /q $(TMPDIR)
